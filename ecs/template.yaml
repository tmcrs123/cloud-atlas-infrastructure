AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  Environment:
    Type: String
    AllowedValues:
      - test
      - demo
      - production
    Default: test
Resources:
  FargateTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Sub "cloud-atlas-${Environment}"
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      Cpu: "1024"
      Memory: "2048"
      NetworkMode: "awsvpc"
      RequiresCompatibilities:
        - "FARGATE"
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: !Sub "cloud-atlas-${Environment}-container"
          Image: !Join
            - ""
            - - !ImportValue cloud-atlas-ecr-repository-uri
              - ":latest"
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub cloud-atlas-${Environment}-ecs-log-group
              awslogs-region: us-east-1
              awslogs-stream-prefix: ecs
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: "tcp"
              AppProtocol: http
          Environment:
            - Name: APP_VERSION
              Value: !Sub ${Environment}
            - Name: ATLAS_TABLE_NAME
              Value: !Sub "cloud-atlas-${Environment}-atlas"
            - Name: BIND_ADDRESS
              Value: 0.0.0.0
            - Name: DOMAIN
              Value: !Join
                - ""
                - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-api-gateway-endpoint"
            - Name: DUMP_BUCKET_NAME
              Value: !Sub "cloud-atlas-${Environment}-dump"
            - Name: ENVIRONMENT
              Value: !Sub ${Environment}
            - Name: GRACEFUL_SHUTDOWN_TIMEOUT_IN_MSECS
              Value: 10000
            - Name: IMAGES_TABLE_LSI_NAME
              Value: !Sub "cloud-atlas-${Environment}-images-table-LSI"
            - Name: IMAGES_TABLE_NAME
              Value: !Sub "cloud-atlas-${Environment}-images"
            - Name: LOG_LEVEL
              Value: info
            - Name: MARKERS_TABLE_NAME
              Value: !Sub "cloud-atlas-${Environment}-markers"
            - Name: OPTIMIZED_BUCKET_NAME
              Value: !Sub "cloud-atlas-${Environment}-optimized"
            - Name: OPTIMIZED_PHOTOS_DISTRIBUTION_URL
              Value: !Join
                - ""
                - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-optimized-photos-cloudfront-distribution-domain-name"
            - Name: OPTIMIZED_PHOTOS_KEYPAIR_ID
              Value: !Join
                - ""
                - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-optimized-photos-cloudfront-public-key-id"
            - Name: OPTIMIZED_PHOTOS_PRIVATE_KEY_NAME
              Value: !Sub "cloud-atlas-${Environment}-cloudfront-private-key"
            - Name: OWNERS_TABLE_LSI_NAME
              Value: !Sub "cloud-atlas-${Environment}-owners-table-LSI"
            - Name: OWNERS_TABLE_NAME
              Value: !Sub "cloud-atlas-${Environment}-owners"
            - Name: PORT
              Value: 3000
            - Name: PRESIGNED_URL_EXPIRATION_IN_SECONDS
              Value: 300
            - Name: PROTOCOL
              Value: http
            - Name: PUBLIC_KEY_URI
              Value: !Join
                - ""
                - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-well-know-jwts"
            - Name: QUEUE_ENABLED
              Value: true
            - Name: QUEUE_MAX_NUM_MESSAGES
              Value: 10
            - Name: QUEUE_POLLING_INTERVAL
              Value: 3600
            - Name: QUEUE_URL
              Value: !Join
                - ""
                - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-optimized-images-queue-url"
            - Name: QUEUE_WAIT_TIME_SECONDS
              Value: 10
            - Name: REGION
              Value: us-east-1
            - Name: SUBDOMAIN
              Value: www
            - Name: TOPIC_ARN
              Value: !Join
                - ""
                - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-bucket-events-topic-arn"
            - Name: TOPIC_ENABLED
              Value: true
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Sub "cloud-atlas-${Environment}"
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT

  ECSService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 1
      LaunchType: "FARGATE"
      ServiceName: !Sub "cloud-atlas-${Environment}-service"
      TaskDefinition: !Ref FargateTaskDefinition
      ServiceRegistries:
        - RegistryArn: !GetAtt CloudAtlasServiceDiscovery.Arn
          Port: 3000
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          SecurityGroups:
            - !Ref ECSSecurityGroup
          Subnets:
            - Fn::ImportValue: !Sub cloud-atlas-${Environment}-public-subnet-one-id
            - Fn::ImportValue: !Sub cloud-atlas-${Environment}-public-subnet-two-id

  ECSSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: !Sub "Security group for cloud-atlas-${Environment} ECS service"
      VpcId: !Join
        - ""
        - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-vpc"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  TaskExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  TaskRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: !Sub "cloud-atlas-${Environment}-ecsTaskRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                Resource: "*"
              - Effect: "Allow"
                Action:
                  - "sqs:ReceiveMessage"
                  - "sqs:DeleteMessage"
                Resource: !Join
                  - ""
                  - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-optimized-images-queue-arn"
              - Effect: "Allow"
                Action:
                  - "sns:Publish"
                Resource: !Join
                  - ""
                  - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-bucket-events-topic-arn"
              - Effect: "Allow"
                Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:UpdateItem"
                  - "dynamodb:DeleteItem"
                  - "dynamodb:BatchGetItem"
                  - "dynamodb:BatchWriteItem"
                  - "dynamodb:Query"
                Resource:
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-images-table-arn"
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-atlas-table-arn"
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-markers-table-arn"
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-images-table-LSI"
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-owners-table-LSI"
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-owners-table-arn"
              - Effect: "Allow"
                Action:
                  - secretsmanager:GetSecretValue"
                Resource:
                  - !Join
                    - ""
                    - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-cloudfront-private-key-arn"

  PrivateDNSNamespace:
    Type: "AWS::ServiceDiscovery::PrivateDnsNamespace"
    Properties:
      Vpc: !Join
        - ""
        - - Fn::ImportValue: !Sub "cloud-atlas-${Environment}-vpc"
      Name: "cloud-atlas-private-dns-namespace"

  CloudAtlasServiceDiscovery:
    Type: "AWS::ServiceDiscovery::Service"
    Properties:
      DnsConfig:
        DnsRecords:
          - Type: SRV
            TTL: 60
        NamespaceId: !Ref PrivateDNSNamespace
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: "cloud.atlas"

Outputs:
  ECSSecurityGroup:
    Description: The ARN of the security group attached to the cloud-atlas ECS service
    Value: !Ref ECSSecurityGroup
    Export:
      Name: !Sub "cloud-atlas-${Environment}-ecs-security-group"
  TaskExecutionRole:
    Description: The ARN of the task execution role attached to the cloud-atlas-api ECS task definition
    Value: !Ref TaskExecutionRole
    Export:
      Name: !Sub "cloud-atlas-${Environment}-task-execution-role"
  TaskRole:
    Description: The ARN of the task role attached to the cloud-atlas-api ECS task definition
    Value: !Ref TaskRole
    Export:
      Name: !Sub "cloud-atlas-${Environment}-task-role"
